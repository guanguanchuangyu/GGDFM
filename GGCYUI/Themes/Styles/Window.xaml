<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:GGCYUI.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Button.xaml"/>
        <ResourceDictionary Source="/GGCYUI;component/Themes/Basic/Geometries.xaml"/>
        <ResourceDictionary Source="/GGCYUI;component/Themes/Basic/Converters.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <LinearGradientBrush x:Key="ResizeGripperForeground" EndPoint="1,0.75" StartPoint="0,0.25">
        <GradientStop Color="#FFFFFF" Offset="0.3"/>
        <GradientStop Color="#BBC5D7" Offset="0.75"/>
        <GradientStop Color="#6D83A9" Offset="1"/>
    </LinearGradientBrush>
    
    <Style TargetType="ResizeGrip">
        <Setter Property="MinWidth" Value="11"/>
        <Setter Property="MaxHeight" Value="11"/>
        <Setter Property="Width" Value="11"/>
        <Setter Property="Height" Value="11"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ResizeGrip">
                    <controls:SimplePanel Background="{TemplateBinding Background}">
                        <Path Width="11" Height="11" Data="M 9,0 L 11,0 L 11,11 L 0,11 L 0,9 L 3,9 L 3,6 L 6,6 L 6,3 L 9,3 z"
                              HorizontalAlignment="Right" VerticalAlignment="Bottom">
                            <Path.Fill>
                                <DrawingBrush TileMode="Tile" Viewbox="0,0,3,3" Viewport="0,0,3,3"
                                              ViewboxUnits="Absolute" ViewportUnits="Absolute">
                                    <DrawingBrush.Drawing>
                                        <GeometryDrawing Brush="{StaticResource ResizeGripperForeground}">
                                            <GeometryDrawing.Geometry>
                                                <RectangleGeometry Rect="0,0,2,2"/>
                                            </GeometryDrawing.Geometry>
                                        </GeometryDrawing>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Path.Fill>
                        </Path>
                    </controls:SimplePanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="WindowDefault" TargetType="Window">
        <Setter Property="Background" Value="{DynamicResource MainBg}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextFore}"/>
    </Style>
    <Style x:Key="WindowWin10" TargetType="controls:FWindow">
        <!--<Setter Property="Background" Value="{DynamicResource MainBg}"/>-->
        <Setter Property="Foreground" Value="{DynamicResource TextFore}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="FontSize" Value="{DynamicResource NormalFontSize}"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="NoClientAreaBackground" Value="{DynamicResource HeadBg}"/>
        <Setter Property="NoClientAreaForeground" Value="{DynamicResource TextFore}"/>
        <!--<Setter Property="CloseButtonBackground" Value="Transparent"/>
        <Setter Property="CloseButtonForeground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="CloseButtonHoverBackground" Value="#e81123"/>
        <Setter Property="CloseButtonHoverForeground" Value="White"/>
        <Setter Property="OtherButtonBackground" Value="Transparent"/>
        <Setter Property="OtherButtonForeground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="OtherButtonHoverBackground" Value="#e5e5e5"/>
        <Setter Property="OtherButtonHoverForeground" Value="{DynamicResource PrimaryTextBrush}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:FWindow">
                    <Border SnapsToDevicePixels="True" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(controls:BorderElement.CornerRadius), RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="{TemplateBinding Margin}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <Border.BitmapEffect>
                            <DropShadowBitmapEffect Color="{DynamicResource 'PrimaryDarkColor'}" ShadowDepth="3" Opacity="0.5"></DropShadowBitmapEffect>
                        </Border.BitmapEffect>
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid Background="{TemplateBinding NoClientAreaBackground}" Name="PART_NonClientArea" Height="{TemplateBinding NoClientAreaHeight}" TextElement.Foreground="{TemplateBinding NoClientAreaForeground}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel WindowChrome.IsHitTestVisibleInChrome="True"  Visibility="Collapsed"
                                            UseLayoutRounding="True" 
                                            VerticalAlignment="Top" 
                                            Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal">
                                    <Button Background="{TemplateBinding NoClientAreaBackground}" Foreground="{TemplateBinding NoClientAreaForeground}" Command="SystemCommands.MinimizeWindowCommand" IsTabStop="False" Name="ButtonMin" Height="29" Style="{StaticResource ButtonIcon}" Width="45" controls:IconElement.Geometry="{StaticResource WindowMinGeometry}" BorderThickness="1,0,1,0" controls:IconElement.Width="10" controls:IconElement.Height="10"/>
                                    <Button Background="{TemplateBinding NoClientAreaBackground}" Foreground="{TemplateBinding NoClientAreaForeground}" Command="SystemCommands.MaximizeWindowCommand" IsTabStop="False" Name="ButtonMax" Height="29" Style="{StaticResource ButtonIcon}" Width="46" controls:IconElement.Geometry="{StaticResource WindowMaxGeometry}" BorderThickness="1,0,1,0" controls:IconElement.Width="10" controls:IconElement.Height="10"/>
                                    <Button Background="{TemplateBinding NoClientAreaBackground}" Foreground="{TemplateBinding NoClientAreaForeground}" Command="SystemCommands.RestoreWindowCommand" IsTabStop="False" Name="ButtonRestore" Height="29" Style="{StaticResource ButtonIcon}" Width="46" controls:IconElement.Geometry="{StaticResource WindowRestoreGeometry}" BorderThickness="1,0,1,0" controls:IconElement.Width="10" controls:IconElement.Height="10"/>
                                    <Button Background="{TemplateBinding NoClientAreaBackground}" Foreground="{TemplateBinding NoClientAreaForeground}" Command="SystemCommands.CloseWindowCommand" IsTabStop="False" Name="ButtonClose" Height="29" Style="{StaticResource ButtonIcon}" Width="46" controls:IconElement.Geometry="{StaticResource CloseGeometry}" BorderThickness="1,0,0,0" controls:IconElement.Width="10" controls:IconElement.Height="10"/>
                                </StackPanel>
                                <Grid Grid.Column="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Image Name="Icon" Margin="10,0,0,0" Source="{TemplateBinding Icon}" VerticalAlignment="Center" Width="10" Height="10"/>
                                    <TextBlock Name="Title" Grid.Column="1" Text="{TemplateBinding Title}" Padding="10,0,0,0" VerticalAlignment="Center"/>
                                    <ContentPresenter WindowChrome.IsHitTestVisibleInChrome="True" Grid.Column="2" x:Name="ContentPresenterMain" Content="{TemplateBinding NoClientAreaContent}"/>
                                </Grid>
                            </Grid>
                            <AdornerDecorator Grid.Row="1">
                                <ContentPresenter/>
                            </AdornerDecorator>
                            <ResizeGrip Width="10" Height="10" x:Name="ResizeGrip" HorizontalAlignment="Right" VerticalAlignment="Bottom" Grid.Row="1" IsTabStop="False" Visibility="Collapsed" WindowChrome.ResizeGripDirection="BottomRight" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsActive" Value="False">
                            <Setter Property="Opacity" Value=".8" TargetName="ContentPresenterMain"/>
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                        </Trigger>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="Padding" Value="8"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ButtonMax"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="ButtonRestore"/>
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter Property="Visibility" Value="Visible" TargetName="ButtonMax"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ButtonRestore"/>
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="NoResize">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ButtonMin"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ButtonMax"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ButtonRestore"/>
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="CanMinimize">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ButtonMax"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ButtonRestore"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True" SourceName="ButtonClose">
                            <Setter Property="Background" TargetName="ButtonClose" Value="{Binding Background,RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                            <Setter Property="Foreground" TargetName="ButtonClose" Value="{Binding Foreground,RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True" SourceName="ButtonMax">
                            <Setter Property="Background" TargetName="ButtonMax" Value="{Binding Background,RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                            <Setter Property="Foreground" TargetName="ButtonMax" Value="{Binding Foreground,RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True" SourceName="ButtonRestore">
                            <Setter Property="Background" TargetName="ButtonRestore" Value="{Binding Background,RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                            <Setter Property="Foreground" TargetName="ButtonRestore" Value="{Binding Foreground,RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True" SourceName="ButtonMin">
                            <Setter Property="Background" TargetName="ButtonMin" Value="{Binding Background,RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                            <Setter Property="Foreground" TargetName="ButtonMin" Value="{Binding Foreground,RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="ShowTitle" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Title"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ResizeGrip" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>